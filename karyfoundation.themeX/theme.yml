---
#
# ─── BASE INFO ──────────────────────────────────────────────────────────────────
#

version: 7.2.0
description: A very carefully designed theme for your eyes to enjoy.
author: Kary Foundation
colorSpaceName: sRGB

#
# ─── THEMES ─────────────────────────────────────────────────────────────────────
#

themes:
  - name: Kary Foundation - Light
    uuid: 7e88f0fb-3ece-4905-9e8d-ebd393352ecb
    baseColor: light
    settings:
      background: F7F7F7
      caret: 00BBEC
      foreground: .gray
      invisibles: E4E4E4
      lineHighlight: F0F0F0
      selection: C2E8F4
      comment: C7C4C2
    colors:
      gray: 1A1A1A
      darkGray: 9B9B9B
      blue: 398BC9
      green: 3F831E
      red: CB4718
      magenta: AF33A6
      orange: C07F00

  - name: Kary Foundation - Dark
    uuid: c156815c-3cb2-4fcd-87c5-384015652e88
    baseColor: dark
    settings:
      background: 1A1A1A
      caret: 00BBEC
      foreground: .gray
      invisibles: 474747
      lineHighlight: 242424
      selection: 1B424E
      comment: 707070
    colors:
      gray: CCCCCC
      darkGray: CACACA
      blue: 819DC2
      green: 7DA76F
      red: D38569
      magenta: B98EB2
      orange: BC9550

#
# ─── SCOPES ─────────────────────────────────────────────────────────────────────
#

rules:

  # General
  - name: Operators
    scope: keyword.operator
    color: .gray

  - name: Strings
    scope: string
    color: .blue

  - name: RegExp
    scope: string
    color: .blue

  - name: Type Cast
    scope: primitive.annotation.var.type.meta.ts
    color: .green

  - name: Gray Operators
    scopes:
      - operator.annotation.type.keyword
      - var.expr.primitive.annotation.type.keyword.meta
    color: .gray

  - name: String Interpolation Begin and End
    scopes:
      - begin.expression.string
      - end.expression.string
    color: .magenta

  - name: String Interpolation Body
    scope: expression.string
    color: .gray

  - name: Number
    scope: constant.numeric
    color: .green

  - name: Built-in constant
    scope: constant.language
    color: .green

  - name: User-defined constant
    scopes:
      - constant.character
      - constant.other
    color: .green

  - name: Keyword
    scope: keyword
    color: .magenta

  - name: Storage
    scope: storage
    color: .magenta

  - name: Storange Type
    scope: storage.type
    color: .orange

  - name: Storage type
    scope: storage.type
    color: .orange

  - name: Module Name
    scope: module.meta
    color: .orange

  - name: Class name
    scope: entity.name.class
    color: .red

  - name: Class property
    scope: property.field.declaration.class.meta
    color: .red

  - name: Inherited Class
    scope: entity.other.inherited-class
    color: .red
    
  - name: this
    scope: this.class.meta
    color: .blue

  - name: function Types
 #   scope: token ts meta function type entity name parameters annotation module
    scope: annotation.meta.ts
    color: .gray

  - name: function argument
    scopes:
    - variable.parameter
    - function.parameters.entity.name.meta
    color: .blue

  - name: Function definition
    scopes:
      - entity.name.function
      - meta.definition.method.ts entity.name.function.ts
      - meta.definition.function.ts entity.name.function.ts
    color: .red

  - name: Variable
    scope: var-single-variable
    color: .red

  - name: Module
    scope: module.ts
    color: .blue

  - name: Markup Headings
    scope: markup.heading
    color: CB4718


  # HTML / XML
  - name: Tag name
    scopes:
      - punctuation.definition.tag.html
      - punctuation.definition.tag.begin
      - punctuation.definition.tag.end
      - entity.name.tag
    color: .blue

  - name: Tag attribute
    scope: entity.other.attribute-name
    color: .magenta

  - name: HTML String
    scopes:
      - string.quoted.single.html
      - string.quoted.double.html
      - string.html
    color: .green


  # Pageman
  - name: Pageman Section Commands
    scope: constant.language.pageman-parts.pageman
    color: .green

  - name: Pageman Markdown Headers
    scope: variable.other.markdown-header.pageman
    color: .red

  - name: Pageman Jekyll Liquid Language Support
    scopes:
      - storage.type.liquid-g1.pageman
      - storage.type.liquid-g2.pageman
    color: .magenta

  - name: Pageman HTML Tags
    scope: string.html-tag.pageman
    color: .blue

  - name: Pageman Legend Phrases
    score: storage.type.legend.pageman
    colore: .orange

  - name: Pageman Markdown Links / Images
    scope: keyword.control.markdown-image-or-link.pageman
    color: .magenta

  - name: Pageman Code Block
    scope: variable.other.muliline-markdown-pre-box.pageman
    color: .orange

  - name: Pageman Inline Markdown Code Block
    scope: variable.other.inline-code-block-markdown.pageman
    color: .red

  - name: Pageman Markdown Tables
    scope: storage.type.markdown-table.pageman
    color: .red

  - name: Pageman HTML special characters
    scope: variable.other.html-special-chars.pageman
    color: .red


  # CSS
  - name: CSS Selectors (General)
    scope: meta.selector.css
    color: .magenta

  - name: CSS ID Selectors
    scope: id.selector.css
    color: .orange

  - name: CSS Tag Selectors
    scopes:
      - tag.selector.css
      - tag.name.entity.css
    color: .red

  - name: CSS property
    scope: property-name.css
    color: .green

  - name: CSS Constants
    scope: constant.other.css
    color: .blue



  # Less
  - name: Variables
    scope: variable.other.less
    color: .orange



  # JavaScript
  - name: JavaScript Object Keys
    scope: key
    color: .green

  - name: JavaScript Special Keywords
    scopes:
      - of.keyword
      - in.keyword
      - new.keyword
    color: .orange

  - name: JavaScript Export Keyword
    scopes:
      - export.keyword
      - comparison.keyword
      - relational.keyword
    color: .orange

  - name: JavaScript Imports
    scope: import-export-all.constant
    color: .orange

  - name: JavaScript Expression Arrow's Parameters
    scope: parameter.expression.Arrow
    color: .gray

  - name: Supporting Functions
    scope: function.support.expr.var.meta.js
    color: .green

  - name: Object Bindings
    scope: object-binding-pattern-variable.other.variable.expr.var.meta.js
    color: .red


  # TypeScript
  - name: TypeScript Namespaces
    scope: namespace.entity.name.meta.ts
    color: .red

  - name: TypeScript Class Modifiers
    scope: storage.modifier.ts
    color: .orange

  - name: TypeScript Return Type
    scope: primitive.return.type.function.meta.ts
    color: .orange

  - name: TypScript Type Cast
    scope: cast.expr.ts
    color: .blue

  - name: Function Parameters Type
    scope: function.parameters.entity.type.ts
    color: .green

  - name: TypeScript Types
    scopes:
      - primitive.type.ts
      - annotation.type.meta.ts
    color: .green



  # Ruby
  - name: Ruby defs
    scope: def.meta.ruby
    color: .orange

  # Ruby
  - name: Ruby defs
    scope: def.meta.ruby
    color: .orange

  - name: Ruby | ... | Separators
    scope: separator.variable.punctuation.ruby
    color: .orange

  - name: Ruby Vars
    scope: variable.ruby
    color: .green

  - name: Ruby Vars that needs to be blue
    scopes:
      - class.variable.ruby
      - instance.variable.ruby
    color: .blue

  - name: Ruby Global Vars
    scope: global.variable.ruby
    color: .red

  - name: Ruby String Interpolation Signs
    scopes:
      - embedded.begin.string.punctuation.ruby
      - embedded.end.string.punctuation.ruby
    color: .magenta

  - name: Ruby String Interpolation Body
    scope: embedded.string.punctuation.ruby
    color: .gray


  # Json
  - name: JSON Keys
    scope: property-name.json
    color: .green

  - name: JSON True False
    scope: constant.value.json
    color: .magenta

  # YAML
  - name: YAML Tag namespace
    scope: name.tag.out.plain.unquoted.string.entity.yaml
    color: .green

# ────────────────────────────────────────────────────────────────────────────────